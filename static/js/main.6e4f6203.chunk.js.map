{"version":3,"sources":["js/Profile.js","js/Contact.js","js/Experiences.js","js/ScrollReveal.js","js/Event.js","js/Timeline.js","js/SkillSet.js","js/Resume.js","serviceWorker.js","index.js"],"names":["Profile","react_default","a","createElement","Segment","basic","className","textAlign","Image","src","circular","centered","size","ageDifMs","Date","now","getTime","ageDate","Math","abs","getUTCFullYear","React","Component","Contact","Container","align","List","horizontal","Item","Header","as","href","rel","target","require","experiences","place","position","location","time","description","props","bulleted","ScrollReveal","Event","componentDidMount","sr","reveal","origin","duration","delay","distance","scale","easing","this","title","year","Timeline","map","exp","js_Event","SkillSet","Grid","columns","divided","stackable","GridColumn","floated","Content","Meta","Description","PureComponent","Resume","verticalAlign","GridRow","js_Profile","js_Contact","js_SkillSet","Timeline_Timeline","Boolean","window","hostname","match","ReactDOM","render","js_Resume","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6e4f6203.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Container, Image, Segment } from \"semantic-ui-react\";\r\n\r\nclass Profile extends React.Component {\r\n  render() {\r\n    return (\r\n      <Segment basic className=\"profile\" textAlign=\"center\">\r\n        <h2>Hey there, I'm Gustavo.</h2>\r\n        <Image src=\"perfil.jpg\" circular centered size=\"medium\" />\r\n        <Segment basic className=\"profile-description\">\r\n          Developer since 2016 mainly Backend but also enjoy doing a little of\r\n          infra tasks and rarely some frontend.\r\n        </Segment>\r\n      </Segment>\r\n    );\r\n  }\r\n\r\n  age() {\r\n    var ageDifMs = Date.now() - new Date(\"04/27/1995\").getTime();\r\n    var ageDate = new Date(ageDifMs);\r\n    return Math.abs(ageDate.getUTCFullYear() - 1970);\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport { Container, List } from \"semantic-ui-react\";\r\n\r\nclass Contact extends Component {\r\n  render() {\r\n    return (\r\n      <Container align=\"center\">\r\n        <List horizontal>\r\n          <List.Item>\r\n            <List.Header\r\n              as=\"a\"\r\n              href=\"https://github.com/paivagustavo\"\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n            >\r\n              GitHub\r\n            </List.Header>\r\n          </List.Item>\r\n\r\n          <List.Item>\r\n            <List.Header\r\n              as=\"a\"\r\n              href=\"https://www.linkedin.com/in/guustavopaiva/\"\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n            >\r\n              LinkedIn\r\n            </List.Header>\r\n          </List.Item>\r\n        </List>\r\n        <br />\r\n        Email:\r\n        <a\r\n          href=\"mailto:guustavo.paiva@gmail.com\"\r\n          rel=\"noopener noreferrer\"\r\n          target=\"_blank\"\r\n        >\r\n          {\" \"}\r\n          guustavo.paiva@gmail.com\r\n        </a>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import { List } from \"semantic-ui-react\";\r\n\r\nvar React = require(\"react\");\r\n\r\nconst experiences = [\r\n  {\r\n    place: \"Stilingue\",\r\n    position: \"Backend Software Engineer\",\r\n    location: \"Ouro Preto, Brazil\",\r\n    time: \"September, 2016 - Current\",\r\n    description: props => (\r\n      <List bulleted>\r\n        <List.Item>\r\n          Implemented microservices archictecture using Spring Cloud. Including\r\n          API Gateway, Service Discovery, Configuration Server and serveral\r\n          other components.\r\n        </List.Item>\r\n        <List.Item>Migrated applications to be cloud native.</List.Item>\r\n        <List.Item>\r\n          Containerized Java Spring microservices to run on Kubernetes.\r\n        </List.Item>\r\n        <List.Item>\r\n          Implemented a Gitlab CI pipeline. Providing continuous integration,\r\n          unit testing and lint checking for several java projects onwed by the\r\n          backend team.\r\n        </List.Item>\r\n        <List.Item>\r\n          Built several social network crawlers (Facebook, Instagram, Twitter\r\n          and YouTube).\r\n        </List.Item>\r\n      </List>\r\n    )\r\n  }\r\n];\r\n\r\nexport default experiences;\r\n","import ScrollReveal from 'scrollreveal'\r\nexport default ScrollReveal()","import React, { Component } from \"react\";\r\nimport \"../css/timeline.scss\";\r\nimport sr from \"./ScrollReveal\";\r\n\r\nclass Event extends Component {\r\n  componentDidMount = () => {\r\n    const config = {\r\n      origin: \"left\",\r\n      duration: 1000,\r\n      delay: 250,\r\n      distance: \"0px\",\r\n      scale: 1,\r\n      easing: \"ease\"\r\n    };\r\n\r\n    sr.reveal(\".timeline-event-content\", config);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"timeline-event\">\r\n        <span className=\"timeline-img cd-picture\" />\r\n\r\n        <div className=\"timeline-event-content\">\r\n          <h2>{this.props.place}</h2>\r\n          <div className=\"timeline-event-header\">\r\n            <span className=\"timeline-event-title\"> {this.props.title} </span>\r\n            <span className=\"timeline-event-date\"> {this.props.year} </span>\r\n          </div>\r\n\r\n          <div className=\"timeline-event-description\">\r\n            {this.props.description()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;\r\n","import React, { Component } from \"react\";\r\nimport Event from \"./Event\";\r\n\r\nexport default class Timeline extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"timeline\">\r\n        {this.props.experiences.map(function(exp) {\r\n          return (\r\n            <Event\r\n              className=\"experience\"\r\n              place={exp.place}\r\n              title={exp.position}\r\n              year={exp.time}\r\n              description={exp.description}\r\n            />\r\n          );\r\n        })}\r\n\r\n        {this.props.experiences.map(function(exp) {\r\n          return (\r\n            <Event\r\n              className=\"experience\"\r\n              place={exp.place}\r\n              title={exp.position}\r\n              year={exp.time}\r\n              description={exp.description}\r\n            />\r\n          );\r\n        })}\r\n\r\n        {this.props.experiences.map(function(exp) {\r\n          return (\r\n            <Event\r\n              className=\"experience\"\r\n              place={exp.place}\r\n              title={exp.position}\r\n              year={exp.time}\r\n              description={exp.description}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"../css/Skills.scss\";\r\nimport { Grid, Item, GridColumn, Segment } from \"semantic-ui-react\";\r\n\r\nclass SkillSet extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <Segment className=\"skills\">\r\n        <Grid columns={2} divided stackable>\r\n          <GridColumn>\r\n            <Item>\r\n              <Item.Image\r\n                size=\"tiny\"\r\n                floated=\"left\"\r\n                src=\"http://www.stickpng.com/assets/images/58480a44cef1014c0b5e4917.png\"\r\n              />\r\n\r\n              <Item.Content>\r\n                <Item.Header as=\"a\">Kubernetes</Item.Header>\r\n                <Item.Meta>Container Orchestration</Item.Meta>\r\n                <Item.Description>\r\n                  Experience using Kubernetes to deploy applications. Usage of\r\n                  deployments with probes to give zero downtime upgrades.\r\n                  Services to expose them to the internet and helm to deploy\r\n                  several third party applications.\r\n                </Item.Description>\r\n              </Item.Content>\r\n            </Item>\r\n          </GridColumn>\r\n          <GridColumn>\r\n            <Item>\r\n              <Item.Image\r\n                size=\"tiny\"\r\n                floated=\"left\"\r\n                src=\"https://cdn-images-1.medium.com/max/1200/1*Ry69aqzJ_CJQly2p6BL3Qw.png\"\r\n              />\r\n\r\n              <Item.Content>\r\n                <Item.Header as=\"a\">Microservices</Item.Header>\r\n                <Item.Meta>Application Architecture</Item.Meta>\r\n                <Item.Description>\r\n                  Experience designing and implemeting fine grained\r\n                  microservices applications with Spring Cloud.\r\n                </Item.Description>\r\n              </Item.Content>\r\n            </Item>\r\n          </GridColumn>\r\n        </Grid>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SkillSet;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/Resume.scss\";\r\nimport Profile from \"./Profile\";\r\nimport Contact from \"./Contact\";\r\nimport { Grid, GridRow } from \"semantic-ui-react\";\r\nimport experiences from \"./Experiences\";\r\nimport Timeline from \"./Timeline\";\r\nimport SkillSet from \"./SkillSet\";\r\n\r\nclass Resume extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Grid verticalAlign columns={1} className=\"site-grid\">\r\n          <GridRow className=\"site-section\">\r\n            <Profile />\r\n            <Contact />\r\n          </GridRow>\r\n          <GridRow className=\"site-section\">\r\n            <SkillSet />\r\n          </GridRow>\r\n          <GridRow className=\"site-section\">\r\n            <Timeline experiences={experiences} />\r\n          </GridRow>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Resume;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Resume from \"./js/Resume\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Resume />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}